/*
Gatekeeper API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CheckNameResponse struct for CheckNameResponse
type CheckNameResponse struct {
	FirstName *string `json:"first_name,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	Score *int32 `json:"score,omitempty"`
	Status *string `json:"status,omitempty"`
	GetcoinsID *int32 `json:"getcoinsID,omitempty"`
}

// NewCheckNameResponse instantiates a new CheckNameResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckNameResponse() *CheckNameResponse {
	this := CheckNameResponse{}
	return &this
}

// NewCheckNameResponseWithDefaults instantiates a new CheckNameResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckNameResponseWithDefaults() *CheckNameResponse {
	this := CheckNameResponse{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *CheckNameResponse) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckNameResponse) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *CheckNameResponse) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *CheckNameResponse) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *CheckNameResponse) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckNameResponse) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *CheckNameResponse) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *CheckNameResponse) SetLastName(v string) {
	o.LastName = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *CheckNameResponse) GetScore() int32 {
	if o == nil || o.Score == nil {
		var ret int32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckNameResponse) GetScoreOk() (*int32, bool) {
	if o == nil || o.Score == nil {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *CheckNameResponse) HasScore() bool {
	if o != nil && o.Score != nil {
		return true
	}

	return false
}

// SetScore gets a reference to the given int32 and assigns it to the Score field.
func (o *CheckNameResponse) SetScore(v int32) {
	o.Score = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CheckNameResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckNameResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CheckNameResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CheckNameResponse) SetStatus(v string) {
	o.Status = &v
}

// GetGetcoinsID returns the GetcoinsID field value if set, zero value otherwise.
func (o *CheckNameResponse) GetGetcoinsID() int32 {
	if o == nil || o.GetcoinsID == nil {
		var ret int32
		return ret
	}
	return *o.GetcoinsID
}

// GetGetcoinsIDOk returns a tuple with the GetcoinsID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckNameResponse) GetGetcoinsIDOk() (*int32, bool) {
	if o == nil || o.GetcoinsID == nil {
		return nil, false
	}
	return o.GetcoinsID, true
}

// HasGetcoinsID returns a boolean if a field has been set.
func (o *CheckNameResponse) HasGetcoinsID() bool {
	if o != nil && o.GetcoinsID != nil {
		return true
	}

	return false
}

// SetGetcoinsID gets a reference to the given int32 and assigns it to the GetcoinsID field.
func (o *CheckNameResponse) SetGetcoinsID(v int32) {
	o.GetcoinsID = &v
}

func (o CheckNameResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.Score != nil {
		toSerialize["score"] = o.Score
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.GetcoinsID != nil {
		toSerialize["getcoinsID"] = o.GetcoinsID
	}
	return json.Marshal(toSerialize)
}

type NullableCheckNameResponse struct {
	value *CheckNameResponse
	isSet bool
}

func (v NullableCheckNameResponse) Get() *CheckNameResponse {
	return v.value
}

func (v *NullableCheckNameResponse) Set(val *CheckNameResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckNameResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckNameResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckNameResponse(val *CheckNameResponse) *NullableCheckNameResponse {
	return &NullableCheckNameResponse{value: val, isSet: true}
}

func (v NullableCheckNameResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckNameResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


