/*
Gatekeeper API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VerifyUserResponseDetails struct for VerifyUserResponseDetails
type VerifyUserResponseDetails struct {
	Address *string `json:"address,omitempty"`
	AddressRisk *string `json:"address_risk,omitempty"`
	Identification *string `json:"identification,omitempty"`
	DateOfBirth *string `json:"date_of_birth,omitempty"`
	Ofac *string `json:"ofac,omitempty"`
	Pep *string `json:"pep,omitempty"`
}

// NewVerifyUserResponseDetails instantiates a new VerifyUserResponseDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyUserResponseDetails() *VerifyUserResponseDetails {
	this := VerifyUserResponseDetails{}
	return &this
}

// NewVerifyUserResponseDetailsWithDefaults instantiates a new VerifyUserResponseDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyUserResponseDetailsWithDefaults() *VerifyUserResponseDetails {
	this := VerifyUserResponseDetails{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *VerifyUserResponseDetails) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyUserResponseDetails) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *VerifyUserResponseDetails) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *VerifyUserResponseDetails) SetAddress(v string) {
	o.Address = &v
}

// GetAddressRisk returns the AddressRisk field value if set, zero value otherwise.
func (o *VerifyUserResponseDetails) GetAddressRisk() string {
	if o == nil || o.AddressRisk == nil {
		var ret string
		return ret
	}
	return *o.AddressRisk
}

// GetAddressRiskOk returns a tuple with the AddressRisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyUserResponseDetails) GetAddressRiskOk() (*string, bool) {
	if o == nil || o.AddressRisk == nil {
		return nil, false
	}
	return o.AddressRisk, true
}

// HasAddressRisk returns a boolean if a field has been set.
func (o *VerifyUserResponseDetails) HasAddressRisk() bool {
	if o != nil && o.AddressRisk != nil {
		return true
	}

	return false
}

// SetAddressRisk gets a reference to the given string and assigns it to the AddressRisk field.
func (o *VerifyUserResponseDetails) SetAddressRisk(v string) {
	o.AddressRisk = &v
}

// GetIdentification returns the Identification field value if set, zero value otherwise.
func (o *VerifyUserResponseDetails) GetIdentification() string {
	if o == nil || o.Identification == nil {
		var ret string
		return ret
	}
	return *o.Identification
}

// GetIdentificationOk returns a tuple with the Identification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyUserResponseDetails) GetIdentificationOk() (*string, bool) {
	if o == nil || o.Identification == nil {
		return nil, false
	}
	return o.Identification, true
}

// HasIdentification returns a boolean if a field has been set.
func (o *VerifyUserResponseDetails) HasIdentification() bool {
	if o != nil && o.Identification != nil {
		return true
	}

	return false
}

// SetIdentification gets a reference to the given string and assigns it to the Identification field.
func (o *VerifyUserResponseDetails) SetIdentification(v string) {
	o.Identification = &v
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise.
func (o *VerifyUserResponseDetails) GetDateOfBirth() string {
	if o == nil || o.DateOfBirth == nil {
		var ret string
		return ret
	}
	return *o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyUserResponseDetails) GetDateOfBirthOk() (*string, bool) {
	if o == nil || o.DateOfBirth == nil {
		return nil, false
	}
	return o.DateOfBirth, true
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *VerifyUserResponseDetails) HasDateOfBirth() bool {
	if o != nil && o.DateOfBirth != nil {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given string and assigns it to the DateOfBirth field.
func (o *VerifyUserResponseDetails) SetDateOfBirth(v string) {
	o.DateOfBirth = &v
}

// GetOfac returns the Ofac field value if set, zero value otherwise.
func (o *VerifyUserResponseDetails) GetOfac() string {
	if o == nil || o.Ofac == nil {
		var ret string
		return ret
	}
	return *o.Ofac
}

// GetOfacOk returns a tuple with the Ofac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyUserResponseDetails) GetOfacOk() (*string, bool) {
	if o == nil || o.Ofac == nil {
		return nil, false
	}
	return o.Ofac, true
}

// HasOfac returns a boolean if a field has been set.
func (o *VerifyUserResponseDetails) HasOfac() bool {
	if o != nil && o.Ofac != nil {
		return true
	}

	return false
}

// SetOfac gets a reference to the given string and assigns it to the Ofac field.
func (o *VerifyUserResponseDetails) SetOfac(v string) {
	o.Ofac = &v
}

// GetPep returns the Pep field value if set, zero value otherwise.
func (o *VerifyUserResponseDetails) GetPep() string {
	if o == nil || o.Pep == nil {
		var ret string
		return ret
	}
	return *o.Pep
}

// GetPepOk returns a tuple with the Pep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyUserResponseDetails) GetPepOk() (*string, bool) {
	if o == nil || o.Pep == nil {
		return nil, false
	}
	return o.Pep, true
}

// HasPep returns a boolean if a field has been set.
func (o *VerifyUserResponseDetails) HasPep() bool {
	if o != nil && o.Pep != nil {
		return true
	}

	return false
}

// SetPep gets a reference to the given string and assigns it to the Pep field.
func (o *VerifyUserResponseDetails) SetPep(v string) {
	o.Pep = &v
}

func (o VerifyUserResponseDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.AddressRisk != nil {
		toSerialize["address_risk"] = o.AddressRisk
	}
	if o.Identification != nil {
		toSerialize["identification"] = o.Identification
	}
	if o.DateOfBirth != nil {
		toSerialize["date_of_birth"] = o.DateOfBirth
	}
	if o.Ofac != nil {
		toSerialize["ofac"] = o.Ofac
	}
	if o.Pep != nil {
		toSerialize["pep"] = o.Pep
	}
	return json.Marshal(toSerialize)
}

type NullableVerifyUserResponseDetails struct {
	value *VerifyUserResponseDetails
	isSet bool
}

func (v NullableVerifyUserResponseDetails) Get() *VerifyUserResponseDetails {
	return v.value
}

func (v *NullableVerifyUserResponseDetails) Set(val *VerifyUserResponseDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyUserResponseDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyUserResponseDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyUserResponseDetails(val *VerifyUserResponseDetails) *NullableVerifyUserResponseDetails {
	return &NullableVerifyUserResponseDetails{value: val, isSet: true}
}

func (v NullableVerifyUserResponseDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyUserResponseDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


