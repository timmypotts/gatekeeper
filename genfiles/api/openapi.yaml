openapi: 3.0.3
info:
  license:
    name: MIT
  title: Gatekeeper API
  version: 0.1.1
servers:
- url: /getcoins
tags:
- description: Quickly check if a person or digital currency address is involved with
    US imposed sanctions.
  name: check
- description: Verify that a user's information is valid.
  name: verify
paths:
  /check/name:
    get:
      parameters:
      - description: Sets minimum score to define a match
        explode: true
        in: query
        name: minscore
        required: true
        schema:
          type: integer
        style: form
      - description: Name to search CSL list for match. First and last name are required.
        explode: true
        in: query
        name: first_name
        required: true
        schema:
          type: string
        style: form
      - description: Not required but will help return more accurate results.
        explode: true
        in: query
        name: middle_name
        required: false
        schema:
          type: string
        style: form
      - description: Name to search CSL list for match.
        explode: true
        in: query
        name: last_name
        required: true
        schema:
          type: string
        style: form
      - description: Street address of person being searched
        explode: true
        in: query
        name: address
        required: false
        schema:
          type: string
        style: form
      - description: Two letter country code to make search more specific
        explode: true
        in: query
        name: country
        required: false
        schema:
          type: string
        style: form
      - description: Boolean to denote whether to bypass cache or not. May be omitted
          if unsure.
        explode: true
        in: query
        name: cached
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Getcoins user id to relate to blockscore person id. This way,
          we don't need to ask blockscore for the ID and we can minimize calls to
          the service
        explode: true
        in: query
        name: getcoinsID
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                first_name: William
                last_name: Costigan
                score: 65
                status: Valid
                getcoinsID: 12345
              schema:
                $ref: '#/components/schemas/CheckNameResponse'
          description: Search has been executed successfully, produces results of
            search
        "400":
          content:
            application/json:
              example:
                error: Invalid request, please include getcoins user id
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Request does not include required parameters, or includes non-existant
            ones
        "500":
          content:
            application/json:
              example:
                error: Server could not process request at this time. Please try again
                  later
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Something went wrong while processing the request
      summary: Check if user has watchlist hits.
      tags:
      - check
  /check/digital-currency-address:
    get:
      parameters:
      - description: Digital currency address
        explode: true
        in: query
        name: doa
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                digital_currency_address: 1AjZPMsnmpdK2Rv9KQNfMurTXinscVro9V
                status: valid
              schema:
                $ref: '#/components/schemas/CheckDigitalCurrencyAddressResponse'
          description: Search has been executed successfully, produces results of
            search
      summary: Check if digital currency address is in CSL
      tags:
      - check
  /verify/document:
    post:
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyUserRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserResponse'
          description: Search has been executed successfully, produces results of
            search
        "400":
          content:
            application/json:
              example:
                error: Invalid request, please include getcoins user id
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Request body does not include required parameters, or includes
            non-existant ones
        "500":
          content:
            application/json:
              example:
                error: Server could not process request at this time. Please try again
                  later
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Something went wrong while processing the request
      summary: |
        Verify user identity with blockscore. Blockscore already checks OFAC and PEP so we might as well
        return those results every call to get our money's worth
      tags:
      - verify
components:
  schemas:
    VerifyUserRequestBody:
      properties:
        id:
          type: string
        name_first:
          type: string
        name_middle:
          type: string
        name_last:
          type: string
        document_type:
          description: Must be either SSN or Drivers License
          type: string
        document_value:
          type: string
        birthday:
          description: MM/DD/YYYY
          type: string
        address_street1:
          type: string
        address_street2:
          type: string
        address_city:
          type: string
        address_subdivision:
          type: string
        address_postal_code:
          type: string
        address_country_code:
          type: string
        phone_number:
          type: string
        ip_address:
          type: string
        note:
          type: string
      required:
      - address_city
      - address_country_code
      - address_postal_code
      - address_street1
      - address_subdivision
      - birthday
      - document_type
      - document_value
      - name_first
      - name_last
      type: object
    VerifyUserResponse:
      example:
        updated_at: updated_at
        created_at: created_at
        details:
          address: address
          identification: identification
          address_risk: address_risk
          date_of_birth: date_of_birth
          pep: pep
          ofac: ofac
        id: id
        status: status
      properties:
        id:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        status:
          description: Assessment of whether person will be accepted or not
          type: string
        details:
          $ref: '#/components/schemas/VerifyUserResponse_details'
      required:
      - details
      - id
      - status
      type: object
    CheckDigitalCurrencyAddressResponse:
      example:
        digital_currency_address: digital_currency_address
        status: status
      properties:
        digital_currency_address:
          type: string
        status:
          type: string
      type: object
    CheckNameResponse:
      example:
        score: 0
        getcoinsID: 6
        last_name: last_name
        first_name: first_name
        status: status
      properties:
        first_name:
          type: string
        last_name:
          type: string
        score:
          type: integer
        status:
          type: string
        getcoinsID:
          type: integer
      type: object
    ErrorMessage:
      properties:
        error:
          type: string
      type: object
    VerifyUserResponse_details:
      example:
        address: address
        identification: identification
        address_risk: address_risk
        date_of_birth: date_of_birth
        pep: pep
        ofac: ofac
      properties:
        address:
          type: string
        address_risk:
          type: string
        identification:
          type: string
        date_of_birth:
          type: string
        ofac:
          type: string
        pep:
          type: string
      type: object
